<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>audio-2000</title>
  <meta name="description" content="{{ metaDescription or renderData.metaDescription or summary or metadata.description }}">
  <link rel="dns-prefetch" href="https://identity.netlify.com">

  {# Canonical URL #}
  {% if canonical %}
    <link rel="canonical" href="{{ canonical }}" />
  {% endif %}

  {# Third-party scripts #}
  <script async src="https://identity.netlify.com/v1/netlify-identity-widget.js"></script>

  {# Fonts #}
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link rel="stylesheet" href="https://use.typekit.net/eww1pyf.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fork-awesome@1.2.0/css/fork-awesome.min.css" integrity="sha256-XoaMnoYC5TH6/+ihMEnospgm0J1PM/nioxbOUdnM8HY=" crossorigin="anonymous">

  {# CSS #}
  <link rel="stylesheet" href="/assets/css/main.css">

  {# Javascript #}
  <script async src="/assets/js/main.bundle.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/lax.js" ></script>
      <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
 <script>(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})
        ({key: "AIzaSyDpU9WVmH7m-dSCvePuPRw9ucES8J2g4-M", v: "weekly"});</script>

<script>
  /**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */
async function initMap() {
  // Request needed libraries.
  const { Map, InfoWindow } = await google.maps.importLibrary("maps");
  const { AdvancedMarkerElement, PinElement } = await google.maps.importLibrary(
    "marker",
  );

  
  const map = new Map(document.getElementById("map"), {
    zoom: 10,
    center: { lat: 46.244751, lng: -0.793403 },
    mapId: "4504f8b37365c3d0",
  });
  // Set LatLng and title text for the markers. The first marker (Boynton Pass)
  // receives the initial focus when tab is pressed. Use arrow keys to
  // move between markers; press tab again to cycle through the map controls.
  const tourStops = [
    {
      position: { lat: 46.303705, lng: -0.487333 },
      title: "<b>Audio 2000 Bessines</b><br><br>21 route de la Rochelle<br>79000 Bessines",
    },
    {
      position: { lat: 46.18519, lng: -1.118828 },
      title: "<b>audio 2000 Puilboreau</b><br><br>Galerie Centre Commercial Hyper U<br>17138 Puilboreau",
    },
    {
      position: { lat: 46.110375, lng: -0.741489 },
      title: "<b>audio 2000 Surgères</b><br><br>Centre commercial Leclerc,<br>rue Jean-Philippe Rameau<br>17700 Surgères",
    },
    {
      position: { lat: 46.160558, lng: -1.150342 },
      title: "<b>audio 2000 La Rochelle</b><br><br>33 Bis Rue des Mercier<br>17000 La Rochelle",
    },
    {
      position: { lat: 46.33805, lng: -0.409736 },
      title: "<b>audio 2000 La Rochelle</b><br><br>Centre Commercial LECLERC,<br>580 Avenue de Paris<br>79000 Niort",
    },
  ];
  // Create an info window to share between markers.
  const infoWindow = new InfoWindow();

  // Create the markers.
  tourStops.forEach(({ position, title }, i) => {
    const pin = new PinElement({
      glyph: `${i + 1}`,
    });
    const marker = new AdvancedMarkerElement({
      position,
      map,
      title: `${title}`,
      content: pin.element,
    });

    // Add a click listener for each marker, and set up the info window.
    marker.addListener("click", ({ domEvent, latLng }) => {
      const { target } = domEvent;

      infoWindow.close();
      infoWindow.setContent(marker.title);
      infoWindow.open(marker.map, marker);
    });
  });
}

initMap();

  </script>



</head>